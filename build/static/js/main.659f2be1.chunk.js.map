{"version":3,"sources":["APIService.js","App.js","Util.js","containers/UserDetails.js","index.js"],"names":["BASE_URL","headers","fetchUserDetails","userId","a","fetch","method","then","response","json","catch","error","console","log","data","fetchUserInvestment","withRouter","props","useState","setUserId","onClick","history","push","userDetails","Container","maxWidth","className","Typography","TextField","id","label","defaultValue","helperText","variant","onChange","e","target","value","Button","color","type","simplifyDate","date","dateString","JSON","stringify","Date","slice","toDateString","formatCurrency","amount","userData","currency","currencySymbolPosition","symbol","availableBalance","useStyles","makeStyles","root","width","marginTop","container","maxHeight","location","state","details","setUserDetails","allUserData","setAllUserData","classes","React","page","setPage","rowsPerPage","setRowsPerPage","anchorEl","setAnchorEl","additionDetails","setAdditionDetails","handleClose","open","Boolean","undefined","useEffect","fetchData","dimensions","columns","minWidth","rows","map","accountHolderType","name","accountType","accountState","allData","accruedInterest","activationDate","balance","currencyCode","overdraftInterestAccrued","technicalOverdraftInterestAccrued","overdraftAmount","technicalOverdraftAmount","interestDue","technicalInterestDue","feesDue","overdraftLimit","lockedBalance","holdBalance","allowOverdraft","AppBar","position","Toolbar","firstName","lastName","emailAddress","preferredLanguage","style","backgroundColor","padding","goBack","creationDate","lastModifiedDate","approvedDate","birthDate","Paper","align","event","searchedValue","toLowerCase","length","tempDetails","filter","accountHolderTypeString","toString","nameString","accountTypeString","balanceString","concat","includes","search","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","fontWeight","TableBody","row","index","hover","role","tabIndex","rowId","tempData","find","currentTarget","handleClick","Popover","onClose","anchorOrigin","vertical","horizontal","margin","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","routes","exact","path","App","UserDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.659f2be1.chunk.js","sourcesContent":["const BASE_URL = \"https://qmkjbvj35b.execute-api.eu-north-1.amazonaws.com/\";\nconst GET = \"get/\";\nconst USER = \"user/\";\nconst INVESTMENTS = \"investments/\"\nconst X_API_KEY = \"ifGIBNTP5b4TVSbDylpST5vhabFJCSBJ7fqmMSKB\";\nconst headers = {\n  \"x-api-key\": X_API_KEY,\n};\n\nexport const fetchUserDetails = async (userId) => {\n  const response = await fetch(`${BASE_URL}${GET}${USER}${userId}`, {\n    method: \"GET\",\n    headers: headers,\n  })\n    .then((response) => response.json())\n    .catch((error) => {\n      console.log(error);\n      return null;\n    });\n  if (response !== null) {\n    const data = await response;\n    return data;\n  } else {\n    return null;\n  }\n};\n\nexport const fetchUserInvestment = async (userId) => {\n    const response = await fetch(`${BASE_URL}${GET}${USER}${userId}/${INVESTMENTS}`, {\n      method: \"GET\",\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .catch((error) => {\n        console.log(error);\n        return null;\n      });\n    if (response !== null) {\n      const data = await response;\n      return data;\n    } else {\n      return null;\n    }\n}","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from \"@material-ui/core/Container\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\n\nimport { fetchUserDetails } from \"./APIService\";\nimport \"./App.scss\";\n\nconst App = (props) => {\n  const [userId, setUserId] = useState(145127236);\n  const onChange = (e) => {\n    setUserId(e.target.value);\n  };\n\n  const onClick = async () => {\n    const response = await fetchUserDetails(userId);\n    console.log(\"response\", response);\n    if (response != null) {\n      props.history.push(`/user/${userId}/`, { userId: userId, userDetails: response });\n    }\n  };\n  return (\n    <Container maxWidth=\"sm\" className=\"app-container\">\n      <div className=\"app\">\n        <Typography>Enter UserId</Typography>\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"User ID\"\n          defaultValue={userId}\n          helperText=\"Enter User ID\"\n          variant=\"outlined\"\n          onChange={(e) => onChange(e)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={onClick}\n        >\n          Submit\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(App);\n","export const simplifyUserData = (data) => {\n  const columns = [\n    {\n      id: \"id\",\n      label: \"ID\",\n      minWidth: 100,\n    },\n    {\n      id: \"accountHolderType\",\n      label: \"Account Holder Type\",\n      minWidth: 120,\n    },\n    {\n      id: \"name\",\n      label: \"Name\",\n      minWidth: 150,\n    },\n    {\n      id: \"accountType\",\n      label: \"Account Type\",\n      minWidth: 150,\n    },\n    {\n      id: \"availableBalance\",\n      label: \"Available Balance\",\n      minWidth: 180,\n    },\n    {\n      id: \"accountState\",\n      label: \"Account State\",\n      minWidth: 120,\n    },\n    {\n      id: \"ViewDetails\"\n    },\n  ];\n  const rows = data.map((userData) => {\n    return {\n      id: userData.id,\n      accountHolderType: userData.accountHolderType,\n      name: userData.name,\n      accountType: userData.accountType,\n      availableBalance: formatCurrency(userData.availableBalance,userData),\n      accountState: userData.accountState,\n    };\n  });\n  const allData = data.map((userData) => {\n    return {\n      id: userData.id,\n      accruedInterest: formatCurrency(userData.accruedInterest,userData),\n      activationDate: simplifyDate(userData.activationDate),\n      balance: formatCurrency(userData.balance,userData),\n      currencyCode: userData.currencyCode,\n      accruedInterest: formatCurrency(userData.accruedInterest,userData),\n      overdraftInterestAccrued: formatCurrency(userData.overdraftInterestAccrued,userData),\n      technicalOverdraftInterestAccrued: formatCurrency(userData.technicalOverdraftInterestAccrued,userData),\n      overdraftAmount: formatCurrency(userData.overdraftAmount,userData),\n      technicalOverdraftAmount: formatCurrency(userData.technicalOverdraftAmount,userData),\n      interestDue: formatCurrency(userData.interestDue,userData),\n      technicalInterestDue: formatCurrency(userData.technicalInterestDue,userData),\n      feesDue: formatCurrency(userData.feesDue,userData),\n      overdraftLimit: formatCurrency(userData.overdraftLimit,userData),\n      lockedBalance: formatCurrency(userData.lockedBalance,userData),\n      holdBalance: formatCurrency(userData.holdBalance,userData),\n      allowOverdraft: userData.allowOverdraft,\n    };\n  });\n  return { columns: columns, rows: rows, allData: allData };\n};\n\nexport const simplifyDate = (date) => {\n  let event = JSON.stringify(new Date(date));\n  let dateString = event.slice(1, 11);\n  let mydate = new Date(dateString);\n  return mydate.toDateString();\n};\nexport const formatCurrency = (amount, userData) => {\n  return userData.currency.currencySymbolPosition==\"BEFORE_NUMBER\"?userData.currency.symbol+\" \"+userData.availableBalance:userData.availableBalance+\" \"+userData.currency.symbol\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  makeStyles,\n  TablePagination,\n  TextField,\n  Popover,\n  Button,\n} from \"@material-ui/core\";\n\nimport { fetchUserInvestment } from \"../APIService\";\nimport { simplifyDate, simplifyUserData } from \"../Util\";\n\nimport \"./UserDetails.scss\";\n\nconst UserDetails = (props) => {\n  const userId = props.history.location.state.userId;\n  const details = props.history.location.state.userDetails;\n  const [userDetails, setUserDetails] = useState([]);\n  const [allUserData, setAllUserData] = useState([]);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [additionDetails, setAdditionDetails] = React.useState({});\n\n  const handleClick = (event, rowId) => {\n    const tempData = dimensions.allData.find(\n      (userData) => userData.id === rowId\n    );\n    console.log(tempData);\n    setAdditionDetails(tempData);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const search = (event) => {\n    const searchedValue = event.target.value.toLowerCase();\n    if (searchedValue.length !== 0) {\n      let tempDetails = userDetails.filter((details) => {\n        const accountHolderTypeString = details.accountHolderType.toString();\n        const nameString = details.name.toString();\n        const accountTypeString = details.accountType.toString();\n        const balanceString = details.balance.toString();\n        const accountState = details.accountState.toString();\n        const rowString = details.id.concat(\n          \" \",\n          accountHolderTypeString,\n          \" \",\n          nameString,\n          \" \",\n          accountTypeString,\n          \" \",\n          balanceString,\n          \" \",\n          accountState\n        );\n        return rowString.toLowerCase().includes(searchedValue);\n      });\n      setUserDetails(tempDetails);\n    } else {\n      setUserDetails(allUserData);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetchUserInvestment(userId);\n      setUserDetails(response);\n      setAllUserData(response);\n    }\n    fetchData();\n  }, [userId]);\n\n  const dimensions = simplifyUserData(userDetails);\n\n  return (\n    <div>\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar className=\"toolbar\">\n            <Typography variant=\"h6\">UserId: {details.id}</Typography>\n            <Typography variant=\"h6\">\n              Hello {details.firstName} {details.lastName}!\n            </Typography>\n            <Typography variant=\"h6\">Email: {details.emailAddress}</Typography>\n            <Typography variant=\"h6\">\n              Preferred Language: {details.preferredLanguage}\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              style={\n                details.state === \"ACTIVE\"\n                  ? { backgroundColor: \"darkgreen\", padding: 10 }\n                  : null\n              }\n            >\n              {details.state}\n            </Typography>\n            <Typography variant=\"h6\" onClick={props.history.goBack}>\n              Logout\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <div className=\"user-details\">\n        <span>Creation Date: {simplifyDate(details.creationDate)}</span>\n        <span>\n          Last Modified Date: {simplifyDate(details.lastModifiedDate)}\n        </span>\n        <span>Approved Date: {simplifyDate(details.approvedDate)}</span>\n        <span>Activation Date: {simplifyDate(details.activationDate)}</span>\n        <span>Birth Date: {simplifyDate(details.birthDate)}</span>\n      </div>\n      <Paper className={classes.root}>\n        <div align=\"left\">\n          <TextField\n            id=\"outlined-search\"\n            label=\"Search Account\"\n            type=\"search\"\n            variant=\"outlined\"\n            onChange={(e) => search(e)}\n          />\n        </div>\n\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {dimensions.columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth, fontWeight: 800 }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {dimensions.rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      {dimensions.columns.map((column) => {\n                        const value = row[column.id];\n                        const rowId = column.id === \"id\" ? value : null;\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {value !== undefined ? (\n                              value\n                            ) : (\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={(e) => handleClick(e, row.id)}\n                              >\n                               View Details\n                              </Button>\n                            )}\n                          </TableCell>\n                        );\n                      })}\n\n                      <Popover\n                        id={id}\n                        open={open}\n                        anchorEl={anchorEl}\n                        onClose={handleClose}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"left\",\n                        }}\n                      >\n                        <div style={{margin: 10}}>\n                          <Typography><b>ID:</b> {additionDetails.id}</Typography>\n                          <Typography>\n                          <b>Balance:</b> {additionDetails.balance}\n                          </Typography>\n                          <Typography>\n                          <b>Locked Balance:</b> {additionDetails.lockedBalance}\n                          </Typography>\n                          <Typography>\n                          <b>Hold Balance:</b> {additionDetails.holdBalance}\n                          </Typography>\n                          <Typography>\n                          <b>Activation Date:</b> {additionDetails.activationDate}\n                          </Typography>\n                          <Typography>\n                            <b>Currency Code:</b> {additionDetails.currencyCode}\n                          </Typography>\n                          <Typography>\n                            <b>Accrued Interest:</b> {additionDetails.accruedInterest}\n                          </Typography>\n                          <Typography>\n                          <b>Interest Due:</b> {additionDetails.interestDue}\n                          </Typography>\n                          <Typography>\n                          <b>Technical Interest Due:</b> {additionDetails.technicalInterestDue}\n                          </Typography>\n                          <Typography>\n                          <b>Fees Due:</b> {additionDetails.feesDue}\n                          </Typography>\n                          <Typography>\n                          <b>Overdraft Limit:</b> {additionDetails.overdraftLimit}\n                          </Typography>\n                          <Typography >\n                          <b>Overdraft amount:</b> {additionDetails.overdraftAmount}\n                          </Typography>\n                          <Typography>\n                          <b>Overdraft Interest Accrued:</b> {additionDetails.overdraftInterestAccrued}\n                          </Typography>\n                          <Typography>\n                          <b>Technical Overdraft Amount:</b> {additionDetails.technicalOverdraftAmount}\n                          </Typography>\n                          <Typography>\n                          <b>Technical Overdraft Interest Accrued:</b> {additionDetails.technicalOverdraftInterestAccrued}\n                          </Typography>\n                        </div>\n                      </Popover>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={dimensions.rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    marginTop: 50,\n  },\n  container: {\n    maxHeight: 600,\n  },\n});\n\nexport default withRouter(UserDetails);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport UserDetails from \"./containers/UserDetails\";\n\nconst routes = (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/user/:userId/\" component={UserDetails}/>\n    </Switch>\n  </Router>\n);\n\nReactDOM.render(routes, document.getElementById(\"root\"));\n"],"sourceRoot":""}